version: "3.9"

services:
    mongo_db:
        image: mongo
        restart: on-failure
        container_name: mongo_db
        ports:
            -  "27017:27017"
        env_file:
            - .env
        healthcheck:
            test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 10s
            timeout: 10s
            retries: 5
        volumes:
            - mongo_data:/data/dbe

    postgres_db:
        image: postgres
        restart: on-failure
        container_name: postgres_db
        ports:
            -  "5432:5432"
        user: 'postgres'
        env_file:
            - .env
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready","-U", "postgres", "-p", "1qwe2rty", "-d", "computer_company_bd" ]
            interval: 10s
            timeout: 10s
            retries: 5
        volumes:
            - postgres_data:/var/lib/posgresql/dates/

    redis_db:
        image: redis
        restart: on-failure
        container_name: redis_db
        ports:
            -  "6379:6379"
        env_file:
            - .env
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
            interval: 10s
            timeout: 10s
            retries: 5

    computer-shop:
        restart: always
        build:
            context: ..\app
        container_name: computer-shop
        ports:
            - "8000:8000"
        depends_on:
            postgres_db:
                condition: service_healthy
            mongo_db:
                condition: service_healthy
            redis_db:
                condition: service_healthy
        volumes:
            - computer_api:/app
        command: uvicorn --host 0.0.0.0 --port 8000 main:app --reload
volumes:
    postgres_data:
    mongo_data:
    computer_api: